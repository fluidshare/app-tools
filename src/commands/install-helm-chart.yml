description: >
  Install a Helm chart to the configured cluster.

parameters:
  chart:
    description: >
      The name of the chart being installed.
    type: string
  chart-version:
    default: ""
    description: >
      The version of the chart being installed.
    type: string

  release-name:
    default: ""
    description: >
      Then Helm release name. Defaults to the value of CIRCLE_PROJECT_REPONAME.
    type: string
  namespace:
    default: ""
    description: >
      The Kubernetes namespace to use. Defaults to the value of CIRCLE_PROJECT_REPONAME.
    type: string
  image-name:
    default: ""
    description: >
      The name of the image to use. Defaults to the value of CIRCLE_PROJECT_REPONAME.
    type: string
  repo-url:
    default: ""
    description: >
      The repository URL this chart is located at.
    type: string
  values:
    default: ""
    description: >
      A comma delimited list of values files to use. For example:

      ./chart/common.yaml,./charts/stage.yaml
    type: string
  use-gcr:
    default: false
    description: >
      Set to true to automatically create the image.* values.
    type: boolean
  use-build-num:
    default: false
    description: >
      Set to true to use the build number in the release name.
    type: boolean

  gcloud-service-key:
    default: GCLOUD_SERVICE_KEY
    description: >
      The environment variable name containing the service account JSON key.
    type: env_var_name
  google-container-cluster:
    default: GOOGLE_CONTAINER_CLUSTER
    description: >
      The environment varibale name containing the cluster name.
    type: env_var_name
  google-container-region:
    default: GOOGLE_CONTAINER_REGION
    description: >
      The environment variable name containing the container region.
    type: env_var_name
  google-container-registry:
    default: gcr.io
    description: >
      The container registry to use.
    type: string
  google-container-registry-project-id:
    default: GOOGLE_CONTAINER_REGISTRY_PROJECT_ID
    description: >
      The environment variable name containing the container registry project ID.
    type: env_var_name
  google-project-id:
    default: GOOGLE_PROJECT_ID
    description: >
      The environment variable name containing the project ID.
    type: env_var_name

steps:
  - authenticate-gke:
      google-container-cluster: << parameters.google-container-cluster >>
      google-container-region: << parameters.google-container-region >>
      google-project-id: << parameters.google-project-id >>
      gcloud-service-key: << parameters.gcloud-service-key >>

  - install-helm-client

  - when:
      condition: << parameters.repo-url >>
      steps:
        - run:
            name: Add custom helm repo.
            command: |-
              IFS="/" read -ra REPO \<<< "<< parameters.chart >>"
              helm repo add "${REPO[0]}" "<< parameters.repo-url >>"

  - run:
      name: Install Helm Chart
      command: |-
        CHART="<< parameters.chart >>"
        CHART_VERSION="<< parameters.chart-version >>"
        RELEASE_NAME="<< parameters.release-name >>"
        NAMESPACE="<< parameters.namespace >>"
        IMAGE_NAME=<< parameters.image-name >>
        VALUES="<< parameters.values >>"

        if [ -z "${RELEASE_NAME}" ]; then
          RELEASE_NAME="${CIRCLE_PROJECT_REPONAME}"
        fi

        if [ -z "${NAMESPACE}" ]; then
          NAMESPACE="${CIRCLE_PROJECT_REPONAME}"
        fi

        if [ ! -z "${CIRCLE_PULL_REQUEST}" ] || [[ "<< parameters.use-build-num >>" == "true" ]]; then
          RELEASE_NAME="${RELEASE_NAME}-${CIRCLE_BUILD_NUM}"
        fi

        if [ -n "${VALUES}" ]; then
          SPLIT_VALUES=($(echo ${VALUES} | tr "," "\n"))
          for i in "${SPLIT_VALUES[@]}"; do
            set -- "$@" -f "${i}"
          done
        fi

        if [ -n "${CHART_VERSION}" ]; then
          set -- "$@" --version "${CHART_VERSION}"
        fi

        USE_GCR="<< parameters.use-gcr >>"
        if [ "${USE_GCR}" == "true" ]; then
          set -- "$@" --set image.registry="<< parameters.google-container-registry >>"
          set -- "$@" --set image.repository="${<< parameters.google-container-registry-project-id >>}/<< parameters.image-name >>"
          set -- "$@" --set image.tag="${CIRCLE_SHA1:0:7}"
        fi

        helm upgrade $RELEASE_NAME $CHART \
          --namespace "${NAMESPACE}" \
          --create-namespace \
          --install \
          --atomic \
          "$@"
